package com.apps.program {	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.MouseEvent;	import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.loading.*;	import com.greensock.loading.display.*;	import com.greensock.events.LoaderEvent;	import flash.text.TextField;    import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import flash.text.AntiAliasType;	import flash.text.Font;	import flash.text.FontStyle;	import flash.display.*	import com.LoadAssets;	import com.apps.program.ProgramGrid;		/**	 * ...	 * @author Gerry Yumul	 */	public class ContactInfo extends Sprite 	{			private var contentHolder:Sprite = new Sprite;		private var schoolXML:XMLList;		private var myfont1 = new Font1;		private var myfont2 = new Font2;		Font.registerFont(Font1);		Font.registerFont(Font2);		private var format1:TextFormat = new TextFormat;		private var format2:TextFormat = new TextFormat;		private var _schoolDetails:XMLList;				public function ContactInfo(schoolDetails:XMLList) 		{			_schoolDetails = schoolDetails;			init();		}				private function init():void {						trace("myfont1: " + myfont1.name)			trace("myfont2: " + myfont2.name)									var sname:String = _schoolDetails.@name ;			var address:String = _schoolDetails.@address;			var city:String = _schoolDetails.@city;			var state:String = _schoolDetails.@state;			var zip:String = _schoolDetails.@zip;			var phoneN:String = _schoolDetails.@phone;			var emailA:String = _schoolDetails.@email;						this.addChild(contentHolder)			var contactHolder:Sprite = new Sprite;						contentHolder.addChild(contactHolder);			//			var school:TextField = createTextLabel(sname,11,"0x000000")			var addr:TextField = createTextLabel(address + " " + city + " " + state + " " + zip,11,"0x873348")			var phone:TextField = createTextLabel(phoneN,11,"0x873348");			var email:TextField = createTextLabel(emailA,11,"0x873348");			//school.text = sname;			//var add:TextField = ProgramGrid.instance.createTextField(_address, 12, 0x000000);			//contactHolder.addChild(contact);			contactHolder.x = 4			contactHolder.y = -13						this.addChild(contactHolder)			var bg:Sprite = createSquare(100, 100);			contentHolder.addChild(bg);												contactHolder.addChild(school);			school.y = contactHolder.height;			contactHolder.addChild(addr);			addr.y = contactHolder.height;						contactHolder.addChild(phone);			phone.y = contactHolder.height;			contactHolder.addChild(email);			email.y = contactHolder.height;						bg.width = contactHolder.width+ 20;			bg.height =contactHolder.height + 35;											}				private function createSquare(w:int, h:int):Sprite		{			var square:Sprite = new detail_ui;				//square.x = -8				//square.y = -8			square.width = w;			square.height = h;			return square;		}		/*		private function createSquare(w:int, h:int):Sprite		{			var square:Sprite = new detail_ui;			square.width = w;			square.height = h;			return square;		}		*/		public function createTextLabel(t:String, s:int, color:String = "0xFFFFFF"):TextField		{			//trace("This is trace create text" + t)						format1.size = s;			format1.letterSpacing = .5;			format1.font = myfont1.fontName;			format1.align = TextFormatAlign.CENTER;			format1.color = Number(color);						format2.size = s;			format2.letterSpacing = .5;			format2.font = myfont2.fontName;			format2.align = TextFormatAlign.CENTER;			format2.color = Number(color);												var tf:TextField = new TextField;			tf.text = t;			if(s == 11) tf.setTextFormat(format2) else tf.setTextFormat(format1) ;			//tf.border = true;			tf.embedFonts = true;			tf.antiAliasType = AntiAliasType.ADVANCED;			tf.condenseWhite = true;			//tf.wordWrap = true;			//tf.multiline = true;			tf.autoSize = TextFieldAutoSize.LEFT;							return tf;		}			}}