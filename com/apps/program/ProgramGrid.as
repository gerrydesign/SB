package com.apps.program{	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.MouseEvent;	import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.loading.*;	import com.greensock.loading.display.*;	import com.greensock.events.LoaderEvent;	import flash.text.TextField;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import flash.text.AntiAliasType;	import flash.text.Font;	import flash.text.FontStyle;	import flash.display.*;	import com.LoadAssets;	import com.apps.program.ContactInfo;	/**	 * ...	 * @author Gerry Yumul	 */	public class ProgramGrid extends Sprite	{		private var _region:String;		private var myfont1 = new Font1;		private var myfont2 = new Font2;		Font.registerFont(Font1);		Font.registerFont(Font2);		private var format1:TextFormat = new TextFormat;		private var format2:TextFormat = new TextFormat;		private var _xmlList:XMLList;		private var headSpriteHolder:Sprite = new Sprite;		private var dataSpriteHolder:Sprite = new Sprite;		private var locationSpriteHolder:Sprite = new Sprite;		private var labelHolderArrs:Array = new Array;		private var pointsArrs:Array = new Array;		private var headLocation:TextField;		private var programArrs:Array = new Array;		private var btnArrs:Array = new Array;		private var btnSchoolArrs:Array = new Array;		private var currentProgram:String;		public static var _instance:ProgramGrid;		private var headSchool:TextField;		public static function get instance():ProgramGrid		{			return _instance;		}		public function ProgramGrid()		{			_instance = this;			//_region = region			init();		}		private function init():void		{			//createbgSquare();			this.addChild(headSpriteHolder);			headSpriteHolder.y = -40;			var headProgram:TextField = createTextLabel("PROGRAMS",13,"0x873348");			headProgram.x = 0;			headSpriteHolder.addChild(headProgram);			headSchool = createTextLabel("SCHOOL",13,"0x873348");			headSchool.x = 240;			headSchool.visible = false;			headSpriteHolder.addChild(headSchool);			headLocation = createTextLabel("LOCATION",13,"0x873348");			headLocation.x = 332;			headLocation.visible = false;			headSpriteHolder.addChild(headLocation);			_xmlList = LoadAssets.instance.xmlDoc.apps.app.details.region.state.school.program;			trace(_xmlList);			headSpriteHolder.addChild(dataSpriteHolder);			dataSpriteHolder.y = headSpriteHolder.height;			showData();		}		private function showData():void		{			for (var i:int = 0; i < _xmlList.length(); i++)			{				var programName:String = _xmlList[i].text();				if (programArrs.indexOf(String(_xmlList[i].text())) == -1)				{					programArrs.push(programName);				}			}			programArrs.sort();			for (var i:int = 0; i < programArrs.length; i++)			{				var programN:String = programArrs[i];				var program:TextField = createTextLabel(programN,11,"0x000000");				program.x = 14;				var programHolder:Sprite = createSquareBg(program.width + 16,program.height + 1);				var programHolderBtn:Sprite = createSquareBg(program.width + 16,program.height + 1);				programHolderBtn.name = programN;				programHolderBtn.alpha = .1;				programHolder.y = dataSpriteHolder.height + 2;				btnArrs.push(programHolderBtn);				program.name = programN;				dataSpriteHolder.addChild(programHolder);				programHolder.addChild(program);				programHolder.addChild(programHolderBtn);				var pointer:Sprite = new orange_bullet_on();				pointer.x = 3;				pointer.y = 4;				pointer.name = programN;				pointer.visible = false;				programHolder.addChild(pointer);				pointsArrs.push(pointer);			}			addEvents(true);		}		//////////MOUSE-EVENTS///////////		//PROGRAM BUTTONS		private function showSchools(e:MouseEvent):void		{			var t:Sprite = e.currentTarget as Sprite;			t.alpha = .7;			//addEvents(false);			currentProgram = t.name;			while (locationSpriteHolder.numChildren)			{				locationSpriteHolder.removeChildAt(0);			}			listSchoolFilter();		}		private function showSchoolsHover(e:MouseEvent):void		{			var t:Sprite = e.currentTarget as Sprite;			t.alpha = .7;					}		private function showSchoolsOut(e:MouseEvent):void		{			var t:Sprite = e.currentTarget as Sprite;			t.alpha = .1;		}		//SCHOLL BUTTONS		private function showLocation(e:MouseEvent):void		{			var t:Sprite = e.currentTarget as Sprite;			for (var i:int = 0; i < btnSchoolArrs.length; i++)			{				btnSchoolArrs[i].visible = true;				btnSchoolArrs[i].parent.alpha = 1;			}			t.alpha = .7;			t.visible = false;			t.parent.alpha = .5;			//addEvents(false);			showContactInfo(t);		}		private function showLocationHover(e:MouseEvent):void		{			var t:Sprite = e.currentTarget as Sprite;			t.alpha = .7;		}		private function showLocationOut(e:MouseEvent):void		{			var t:Sprite = e.currentTarget as Sprite;			t.alpha = .1;		}		////////////////BUTTON EVENT TOGGLES////////////////////		//PROGRAMS		private function addEvents(b:Boolean):void		{			if (b)			{				for (var i:int = 0; i < btnArrs.length; i++)				{					btnArrs[i].addEventListener(MouseEvent.CLICK, showSchools);					btnArrs[i].addEventListener(MouseEvent.MOUSE_OVER, showSchoolsHover);					btnArrs[i].addEventListener(MouseEvent.MOUSE_OUT, showSchoolsOut);					btnArrs[i].buttonMode = true;				}			}			else			{				for (var i:int = 0; i < btnArrs.length; i++)				{					btnArrs[i].removeEventListener(MouseEvent.CLICK, showSchools);					btnArrs[i].removeEventListener(MouseEvent.MOUSE_OVER, showSchoolsHover);					btnArrs[i].removeEventListener(MouseEvent.MOUSE_OUT, showSchoolsOut);					btnArrs[i].buttonMode = false;				}			}		}		//SCHOOLs		private function addSchoolEvents(b:Boolean):void		{			if (b)			{				for (var i:int = 0; i < btnSchoolArrs.length; i++)				{					btnSchoolArrs[i].addEventListener(MouseEvent.CLICK, showLocation);					btnSchoolArrs[i].addEventListener(MouseEvent.MOUSE_OVER, showLocationHover);					btnSchoolArrs[i].addEventListener(MouseEvent.MOUSE_OUT, showLocationOut);					btnSchoolArrs[i].buttonMode = true;				}			}			else			{				for (var i:int = 0; i < btnSchoolArrs.length; i++)				{					btnSchoolArrs[i].removeEventListener(MouseEvent.CLICK, showLocation);					btnSchoolArrs[i].removeEventListener(MouseEvent.MOUSE_OVER, showLocationHover);					btnSchoolArrs[i].removeEventListener(MouseEvent.MOUSE_OUT, showLocationOut);					btnSchoolArrs[i].buttonMode = false;				}			}		}		////////FILTER SCHOOL BY PROGRAMS/////////////		private function listSchoolFilter():void		{			var tl:TimelineLite = new TimelineLite;						headSchool.visible = true;			headSpriteHolder.addChild(locationSpriteHolder);			locationSpriteHolder.name = "locations";			locationSpriteHolder.x = 240;			locationSpriteHolder.y = headLocation.y + 5;			var schools:XMLList = LoadAssets.instance.xmlDoc.apps.app.details.region.state.school;			for (var i:int = 0; i < schools.length(); i++)			{				var p:XMLList = schools[i].program;				for (var j:int = 0; j < p.length(); j++)				{					if (p[j].text() == currentProgram)					{						trace("This is the school name filtered:    " + schools[i].@name);						var schoolLabel:TextField = createTextLabel(schools[i]. @ name,11,"0x873348");						var schoolLabelBg:Sprite = createSquareBg(schoolLabel.width + 1,schoolLabel.height + 2);						schoolLabelBg.visible = false;						var schoolLabelBtn:Sprite = createSquareBg(schoolLabel.width + 1,schoolLabel.height + 2);						schoolLabelBtn.name = schools[i]. @ name;						schoolLabelBtn.alpha = .2;						btnSchoolArrs.push(schoolLabelBtn);						locationSpriteHolder.addChild(schoolLabelBg);												schoolLabelBg.addChild(schoolLabel);						schoolLabelBg.addChild(schoolLabelBtn);						schoolLabelBg.y = locationSpriteHolder.height;						tl.append(TweenLite.to(schoolLabelBg, .1, {visible:true}))					}				}			}			addSchoolEvents(true);			/**/			for (var k:int = 0; k < pointsArrs.length; k++)			{				pointsArrs[k].visible = false;				if (pointsArrs[k].name == currentProgram)				{					pointsArrs[k].visible = true;				}			}		}		////SHOW PROGRAMS FILTERED BY SCHOOL NAME		private function programs(select:String)		{			trace("Selected Program:::::" + select);			trace("Master XML:::::" + _xmlList);			trace("Filtered programs:       " + _xmlList.state.school.(@name == select));			if (dataSpriteHolder.getChildByName("plist"))			{				dataSpriteHolder.removeChild(dataSpriteHolder.getChildByName("plist"));			}		}		//SHOW CONTACT INFO DETAILS;		private function showContactInfo(t:Sprite):void		{			if (locationSpriteHolder.getChildByName("contact") != null)			{				locationSpriteHolder.removeChild(locationSpriteHolder.getChildByName("contact"));			}			var contactInfo:ContactInfo = new ContactInfo(LoadAssets.instance.xmlDoc.apps.app.details.region.state.school.(@name == t.name));			contactInfo.y = t.parent.y;			contactInfo.x = 180;			contactInfo.alpha = 0			contactInfo.name = "contact";			locationSpriteHolder.addChild(contactInfo);						TweenLite.to(contactInfo, .2, {alpha:1})		}		//RETURN BUTTON		private function createBackButton():void		{			var closeLbl:TextField = createTextLabel(" << BACK TO MAP",11,"0x873348");			var closeBtnHolder:Sprite = new Sprite  ;			var closesq:Sprite = createSquareBg(closeLbl.width + 2,closeLbl.height + 1);			var closesqBtn:Sprite = createSquareBg(closeLbl.width + 2,closeLbl.height + 1);			closesqBtn.alpha = 0;			closesqBtn.buttonMode = true;			closesqBtn.addEventListener(MouseEvent.CLICK, BackToMap);			dataSpriteHolder.addChild(closeBtnHolder);			closeBtnHolder.y = 290;			closeBtnHolder.addChild(closesq);			closeBtnHolder.addChild(closeLbl);			closeBtnHolder.addChild(closesqBtn);		}		private function BackToMap(e:MouseEvent):void		{			//MapDetails.instance.removeLocationGrid();		}		private function getHoverPrograms(e:MouseEvent):void		{			var n:String = e.target.name;			var par:Sprite = Sprite(e.currentTarget.parent);			par.getChildByName(n+"btn").visible = true			;		}		private function getOutPrograms(e:MouseEvent):void		{			var n:String = e.target.name;			var par:Sprite = Sprite(e.currentTarget.parent);			par.getChildByName(n + "btn").visible = false;		}		private function createbgSquare():void		{			var bg:Sprite = createSquare(552,365);			//bg.alpha = .7			this.addChild(bg);			trace("error");		}		private function createSquare(w:int, h:int):Sprite		{			var square:Sprite = new detail_ui  ;			//square.x = -8			//square.y = -8			square.width = w;			square.height = h;			return square;		}		public function createSquareBg(w:int, h:int):Sprite		{			var square:Sprite = new Sprite  ;			square.graphics.beginFill(0xFFFFFF);			square.graphics.drawRoundRect(0,0,w,h,5);			square.graphics.endFill();/**/			//square.alpha = 1;			return square;		}		public function createTextLabel(t:String, s:int, color:String = "0xFFFFFF"):TextField		{			//trace("This is trace create text" + t)			format1.size = s;			format1.letterSpacing = .5;			format1.font = myfont1.fontName;			format1.align = TextFormatAlign.CENTER;			format1.color = Number(color);/*0x873348;*/			format2.size = s;			format2.letterSpacing = .5;			format2.font = myfont2.fontName;			format2.align = TextFormatAlign.CENTER;			format2.color = Number(color);/* 0x666666;*/			var tf:TextField = new TextField  ;			tf.text = t;			if (s == 11)			{				tf.setTextFormat(format2);			}			else			{				tf.setTextFormat(format1);			}//tf.border = true;			tf.embedFonts = true;			tf.antiAliasType = AntiAliasType.ADVANCED;			tf.condenseWhite = true;			//tf.wordWrap = true;			//tf.multiline = true;			tf.selectable = false;			tf.autoSize = TextFieldAutoSize.LEFT;			return tf;		}	}}